name: Package AppImage
description: Package Helium as AppImage and tar.xz, upload artifacts

inputs:
  private_key:
    description: 'GPG private key'
    required: true
  passphrase:
    description: 'Passphrase protecting the GPG private key'
    required: true

runs:
  using: composite
  steps:
    - uses: docker/setup-buildx-action@v3

    - name: Download build cache
      uses: actions/download-artifact@v4
      with:
        name: build-cache-${{ env.ARCH }}
        path: .github/cache/

    - name: Import build cache
      shell: bash
      run: bash ./.github/scripts/import-cache.sh

    - name: Package and sign AppImage with Docker
      shell: bash
      env:
        GPG_PRIVATE_KEY: ${{ inputs.private_key }}
        GPG_PASSPHRASE: ${{ inputs.passphrase }}
      run: bash ./package/docker-package.sh --sign

    - name: List build artifacts
      shell: bash
      run: ls -la build

    - name: Get version info
      id: version
      shell: bash
      run: |
        helium_version=$(python3 "helium-chromium/utils/helium_version.py" --tree "helium-chromium/" --platform-tree "." --print)
        echo "version=${helium_version}" >> $GITHUB_OUTPUT

    - name: Upload AppImage artifact
      uses: actions/upload-artifact@v4
      with:
        name: helium-${{ steps.version.outputs.version }}-${{ env.ARCH }}-AppImage
        path: build/release/helium-${{ steps.version.outputs.version }}-${{ env.ARCH }}.AppImage*
        if-no-files-found: error
        compression-level: 0

    - name: Upload tar.xz artifact
      uses: actions/upload-artifact@v4
      with:
        name: helium-${{ steps.version.outputs.version }}-${{ env.ARCH }}-linux
        path: build/release/helium-${{ steps.version.outputs.version }}-${{ env.ARCH }}_linux.tar.xz
        if-no-files-found: error
        compression-level: 0
